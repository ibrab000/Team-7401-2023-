// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot;

import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;
import edu.wpi.first.wpilibj2.command.button.JoystickButton;
import edu.wpi.first.wpilibj2.command.button.Trigger;
import frc.robot.Commands.TurnOnIntake;
import frc.robot.Subsystems.Intake;

/**
 * This is a demo program showing the use of the DifferentialDrive class, specifically it contains
 * the code necessary to operate a robot with tank drive.
 */
public class Robot2 extends TimedRobot {
  private DifferentialDrive m_myRobot;
  private final XboxController m_xboxController = new XboxController(0);
  private final Intake m_Intake = new Intake();

  private final MotorController m_leftMotor1 = new PWMSparkMax(0);
  private final MotorController m_leftMotor2 = new PWMSparkMax(1);
  private final MotorController m_rightMotor1 = new PWMSparkMax(2);
  private final MotorController m_rightMotor2 = new PWMSparkMax(3);

  private final MotorControllerGroup m_leftMotorControllerGroup = new MotorControllerGroup(m_leftMotor1, m_leftMotor2);
  private final MotorControllerGroup m_rightMotorControllerGroup = new MotorControllerGroup(m_rightMotor1, m_rightMotor2);
  @Override
  public void robotInit() {
    // We need to invert one side of the drivetrain so that positive voltages
    // result in both sides moving forward. Depending on how your robot's
    // gearbox is constructed, you might have to invert the left side instead.
    m_rightMotorControllerGroup.setInverted(true);

    m_myRobot = new DifferentialDrive(m_leftMotorControllerGroup, m_rightMotorControllerGroup);
    JoystickButton yButtonTrigger = new JoystickButton(m_xboxController, XboxController.Button.kY.value);
    yButtonTrigger.toggleOnTrue(m_Intake.setIntakeSpeed(0.2));
  }

  @Override
  public void teleopPeriodic() {
    m_myRobot.tankDrive(m_xboxController.getLeftY(), m_xboxController.getRightY());
  }
}

